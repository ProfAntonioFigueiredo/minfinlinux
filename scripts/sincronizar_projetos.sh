#!/bin/bash

# =====================================================
# SCRIPT: SINCRONIZA√á√ÉO AUTOM√ÅTICA DE PROJETOS
# Mant√©m ambos os reposit√≥rios sempre atualizados
# =====================================================

echo "üîÑ SINCRONIZA√á√ÉO AUTOM√ÅTICA DE PROJETOS"
echo "======================================"
echo ""

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Diret√≥rios
PROJETO_PRINCIPAL="/Users/imac/LinuxAvan√ßado"
PROJETO_WISELEARNING="/Users/imac/wiselearning-platform"

# Fun√ß√£o para log colorido
log_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

log_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

log_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

log_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# Fun√ß√£o para sincronizar do principal para wiselearning
sync_to_wiselearning() {
    log_info "Sincronizando do projeto principal para WiseLearning..."
    
    # Copiar arquivos da plataforma
    cp -r "$PROJETO_PRINCIPAL/plataforma"/* "$PROJETO_WISELEARNING/"
    
    # Copiar m√≥dulos se existirem
    if [ -d "$PROJETO_PRINCIPAL/modulos" ]; then
        cp -r "$PROJETO_PRINCIPAL/modulos" "$PROJETO_WISELEARNING/"
    fi
    
    # Copiar scripts se existirem
    if [ -d "$PROJETO_PRINCIPAL/scripts" ]; then
        cp -r "$PROJETO_PRINCIPAL/scripts" "$PROJETO_WISELEARNING/"
    fi
    
    log_success "Arquivos copiados para WiseLearning"
}

# Fun√ß√£o para sincronizar do wiselearning para principal
sync_from_wiselearning() {
    log_info "Sincronizando do WiseLearning para projeto principal..."
    
    # Copiar arquivos da plataforma
    cp -r "$PROJETO_WISELEARNING"/* "$PROJETO_PRINCIPAL/plataforma/"
    
    log_success "Arquivos copiados para projeto principal"
}

# Fun√ß√£o para fazer commit e push
commit_and_push() {
    local diretorio="$1"
    local mensagem="$2"
    
    cd "$diretorio"
    
    # Verificar se h√° mudan√ßas
    if [ -n "$(git status --porcelain)" ]; then
        log_info "Fazendo commit das mudan√ßas em $(basename "$diretorio")..."
        git add .
        git commit -m "$mensagem"
        
        # Push para origin
        log_info "Enviando para reposit√≥rio principal..."
        git push origin main
        
        # Push para wiselearning se for o projeto principal
        if [ "$diretorio" = "$PROJETO_PRINCIPAL" ]; then
            log_info "Enviando para reposit√≥rio WiseLearning..."
            git push wiselearning main 2>/dev/null || log_warning "Falha ao enviar para WiseLearning (normal se n√£o configurado)"
        fi
        
        log_success "Mudan√ßas enviadas com sucesso"
    else
        log_info "Nenhuma mudan√ßa detectada em $(basename "$diretorio")"
    fi
}

# Fun√ß√£o para sincroniza√ß√£o bidirecional
sync_bidirectional() {
    log_info "Iniciando sincroniza√ß√£o bidirecional..."
    
    # 1. Sincronizar do principal para wiselearning
    sync_to_wiselearning
    
    # 2. Fazer commit no wiselearning
    commit_and_push "$PROJETO_WISELEARNING" "feat: Sincroniza√ß√£o autom√°tica - $(date '+%Y-%m-%d %H:%M:%S')"
    
    # 3. Fazer commit no principal
    commit_and_push "$PROJETO_PRINCIPAL" "feat: Sincroniza√ß√£o autom√°tica - $(date '+%Y-%m-%d %H:%M:%S')"
    
    log_success "Sincroniza√ß√£o bidirecional conclu√≠da"
}

# Fun√ß√£o para verificar status
check_status() {
    log_info "Verificando status dos reposit√≥rios..."
    
    echo ""
    echo "üìä PROJETO PRINCIPAL:"
    cd "$PROJETO_PRINCIPAL"
    git status --short
    echo ""
    
    echo "üìä WISELEARNING:"
    cd "$PROJETO_WISELEARNING"
    git status --short
    echo ""
}

# Fun√ß√£o para configurar reposit√≥rios
setup_repos() {
    log_info "Configurando reposit√≥rios..."
    
    # Configurar projeto principal
    cd "$PROJETO_PRINCIPAL"
    git remote add wiselearning https://ProfAntonioFigueiredo@dev.azure.com/ProfAntonioFigueiredo/MinFIN%20-%20DevOps/_git/wiselearning 2>/dev/null || log_info "Remote wiselearning j√° configurado"
    
    # Configurar wiselearning
    cd "$PROJETO_WISELEARNING"
    git remote add origin https://ProfAntonioFigueiredo@dev.azure.com/ProfAntonioFigueiredo/MinFIN%20-%20DevOps/_git/wiselearning 2>/dev/null || log_info "Remote origin j√° configurado"
    
    log_success "Reposit√≥rios configurados"
}

# Menu principal
case "${1:-sync}" in
    "sync")
        sync_bidirectional
        ;;
    "to-wiselearning")
        sync_to_wiselearning
        commit_and_push "$PROJETO_WISELEARNING" "feat: Sincroniza√ß√£o do projeto principal - $(date '+%Y-%m-%d %H:%M:%S')"
        ;;
    "from-wiselearning")
        sync_from_wiselearning
        commit_and_push "$PROJETO_PRINCIPAL" "feat: Sincroniza√ß√£o do WiseLearning - $(date '+%Y-%m-%d %H:%M:%S')"
        ;;
    "status")
        check_status
        ;;
    "setup")
        setup_repos
        ;;
    "help")
        echo "Uso: $0 [comando]"
        echo ""
        echo "Comandos dispon√≠veis:"
        echo "  sync                - Sincroniza√ß√£o bidirecional (padr√£o)"
        echo "  to-wiselearning     - Sincronizar apenas para WiseLearning"
        echo "  from-wiselearning   - Sincronizar apenas do WiseLearning"
        echo "  status              - Verificar status dos reposit√≥rios"
        echo "  setup               - Configurar reposit√≥rios"
        echo "  help                - Mostrar esta ajuda"
        ;;
    *)
        log_error "Comando inv√°lido: $1"
        echo "Use '$0 help' para ver os comandos dispon√≠veis"
        exit 1
        ;;
esac

echo ""
log_success "Script de sincroniza√ß√£o conclu√≠do!"
echo ""
