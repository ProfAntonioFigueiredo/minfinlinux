#!/bin/bash

# =============================================================================
# EXERC√çCIO: PROCESSOS E SERVI√áOS
# M√≥dulo 1 - Treinamento Linux MINFIN Angola
# Ubuntu 24.04 LTS (Noble Numbat) - Comandos otimizados
# =============================================================================

echo "‚öôÔ∏è  EXERC√çCIO: PROCESSOS E SERVI√áOS"
echo "=================================="
echo ""

echo "üìç Diret√≥rio atual: $(pwd)"
echo "üë§ Usu√°rio atual: $(whoami)"
echo "üïê Data/Hora: $(date)"
echo ""

# Exerc√≠cio 1: Informa√ß√µes b√°sicas do sistema
echo "üìù EXERC√çCIO 1: Informa√ß√µes b√°sicas do sistema"
echo "---------------------------------------------"
echo "‚è±Ô∏è  Tempo de atividade do sistema:"
uptime
echo ""

echo "üë• Usu√°rios logados:"
w
echo ""

echo "üìä √öltimos logins:"
last | head -5
echo ""

# Exerc√≠cio 2: Listar processos com ps
echo "üìù EXERC√çCIO 2: Listando processos com ps"
echo "---------------------------------------"
echo "üìã Processos do usu√°rio atual:"
ps
echo ""

echo "üìã Todos os processos (formato simples):"
ps -e | head -10
echo ""

echo "üìã Processos com formato completo:"
ps -f | head -10
echo ""

echo "üìã Todos os processos com formato BSD:"
ps -aux | head -10
echo ""

# Exerc√≠cio 3: Buscar processos espec√≠ficos
echo "üìù EXERC√çCIO 3: Buscando processos espec√≠ficos"
echo "---------------------------------------------"
echo "üîç Processos bash em execu√ß√£o:"
ps -aux | grep bash | grep -v grep
echo ""

echo "üîç Processos do sistema (systemd):"
ps -aux | grep systemd | head -5
echo ""

echo "üîç Processos ordenados por uso de CPU:"
ps -aux --sort=-%cpu | head -5
echo ""

echo "üîç Processos ordenados por uso de mem√≥ria:"
ps -aux --sort=-%mem | head -5
echo ""

# Exerc√≠cio 4: Usar pgrep e pidof
echo "üìù EXERC√çCIO 4: Usando pgrep e pidof"
echo "----------------------------------"
echo "üîç PIDs de processos bash:"
pgrep bash
echo ""

echo "üîç PID do processo bash (primeiro):"
pidof bash
echo ""

echo "üîç PIDs de processos systemd:"
pgrep systemd
echo ""

# Exerc√≠cio 5: Monitorar com top (modo n√£o-interativo)
echo "üìù EXERC√çCIO 5: Monitoramento com top"
echo "-----------------------------------"
echo "üìä Top 5 processos por CPU (5 segundos):"
timeout 5s top -b -n 1 | head -12
echo ""

echo "üìä Top 5 processos por mem√≥ria:"
top -b -n 1 -o %MEM | head -12
echo ""

# Exerc√≠cio 6: Gerenciar servi√ßos com systemctl
echo "üìù EXERC√çCIO 6: Gerenciando servi√ßos com systemctl"
echo "------------------------------------------------"
echo "üìã Servi√ßos ativos:"
systemctl list-units --type=service --state=active | head -10
echo ""

echo "üìã Servi√ßos com falha:"
systemctl list-units --type=service --state=failed
echo ""

echo "üìã Status de servi√ßos comuns:"
echo "üîß Status do SSH:"
systemctl status ssh --no-pager -l
echo ""

echo "üîß Status do NetworkManager:"
systemctl status NetworkManager --no-pager -l
echo ""

# Exerc√≠cio 7: Trabalhar com logs do systemd
echo "üìù EXERC√çCIO 7: Trabalhando com logs do systemd"
echo "----------------------------------------------"
echo "üìã √öltimas 10 linhas do journal:"
journalctl -n 10 --no-pager
echo ""

echo "üìã Logs de erro do sistema:"
journalctl -p err --no-pager | head -5
echo ""

echo "üìã Logs de hoje:"
journalctl --since today --no-pager | head -5
echo ""

# Exerc√≠cio 8: Criar e gerenciar um servi√ßo simples
echo "üìù EXERC√çCIO 8: Criando servi√ßo simples"
echo "-------------------------------------"
echo "üîß Criando script de servi√ßo de teste:"
mkdir -p /tmp/servico_teste
cat > /tmp/servico_teste/teste.sh << 'EOF'
#!/bin/bash
while true; do
    echo "$(date): Servi√ßo de teste ativo" >> /tmp/servico_teste.log
    sleep 10
done
EOF

chmod +x /tmp/servico_teste/teste.sh
echo "‚úÖ Script criado: /tmp/servico_teste/teste.sh"
echo ""

echo "üîß Iniciando servi√ßo em background:"
nohup /tmp/servico_teste/teste.sh > /dev/null 2>&1 &
SERVICO_PID=$!
echo "‚úÖ Servi√ßo iniciado com PID: $SERVICO_PID"
echo ""

echo "üîß Verificando se o servi√ßo est√° rodando:"
ps -p $SERVICO_PID
echo ""

echo "üîß Verificando logs do servi√ßo:"
sleep 2
tail -3 /tmp/servico_teste.log
echo ""

# Exerc√≠cio 9: Gerenciar o processo criado
echo "üìù EXERC√çCIO 9: Gerenciando o processo criado"
echo "-------------------------------------------"
echo "üîß Enviando sinal TERM para o servi√ßo:"
kill -TERM $SERVICO_PID
sleep 1
echo ""

echo "üîß Verificando se o processo foi terminado:"
if ps -p $SERVICO_PID > /dev/null 2>&1; then
    echo "‚ö†Ô∏è  Processo ainda ativo, for√ßando termina√ß√£o:"
    kill -KILL $SERVICO_PID
    sleep 1
fi

ps -p $SERVICO_PID 2>/dev/null || echo "‚úÖ Processo terminado com sucesso"
echo ""

# Exerc√≠cio 10: Monitorar recursos do sistema
echo "üìù EXERC√çCIO 10: Monitorando recursos do sistema"
echo "----------------------------------------------"
echo "üíæ Uso de mem√≥ria:"
free -h
echo ""

echo "üíø Uso de disco:"
df -h | head -5
echo ""

echo "üî• Uso de CPU (se iostat estiver dispon√≠vel):"
if command -v iostat >/dev/null 2>&1; then
    iostat 1 1
else
    echo "‚ÑπÔ∏è  iostat n√£o dispon√≠vel"
fi
echo ""

# Exerc√≠cio 11: Trabalhar com sinais
echo "üìù EXERC√çCIO 11: Trabalhando com sinais"
echo "--------------------------------------"
echo "üîß Criando processo para demonstra√ß√£o de sinais:"
sleep 30 &
SLEEP_PID=$!
echo "‚úÖ Processo sleep criado com PID: $SLEEP_PID"
echo ""

echo "üîß Verificando processo:"
ps -p $SLEEP_PID
echo ""

echo "üîß Enviando sinal STOP (pausar):"
kill -STOP $SLEEP_PID
sleep 1
ps -p $SLEEP_PID
echo ""

echo "üîß Enviando sinal CONT (continuar):"
kill -CONT $SLEEP_PID
sleep 1
ps -p $SLEEP_PID
echo ""

echo "üîß Terminando processo:"
kill -TERM $SLEEP_PID
sleep 1
ps -p $SLEEP_PID 2>/dev/null || echo "‚úÖ Processo terminado"
echo ""

# Exerc√≠cio 12: Limpeza
echo "üìù EXERC√çCIO 12: Limpeza"
echo "-----------------------"
echo "üßπ Removendo arquivos de teste:"
rm -rf /tmp/servico_teste
echo "‚úÖ Limpeza conclu√≠da!"
echo ""

echo "üéØ RESUMO DOS COMANDOS APRENDIDOS:"
echo "‚Ä¢ ps                          - Listar processos"
echo "‚Ä¢ ps -aux                     - Listar todos os processos"
echo "‚Ä¢ ps -aux --sort=-%cpu        - Ordenar por CPU"
echo "‚Ä¢ top                         - Monitoramento em tempo real"
echo "‚Ä¢ pgrep nome_processo         - Encontrar PID por nome"
echo "‚Ä¢ pidof nome_processo         - PID de processo"
echo "‚Ä¢ kill -TERM PID              - Terminar graciosamente"
echo "‚Ä¢ kill -KILL PID              - For√ßar termina√ß√£o"
echo "‚Ä¢ kill -STOP PID              - Pausar processo"
echo "‚Ä¢ kill -CONT PID              - Continuar processo"
echo "‚Ä¢ systemctl status servico    - Status do servi√ßo"
echo "‚Ä¢ systemctl start servico    - Iniciar servi√ßo"
echo "‚Ä¢ systemctl stop servico     - Parar servi√ßo"
echo "‚Ä¢ journalctl -n 10            - √öltimas 10 linhas"
echo "‚Ä¢ journalctl -p err           - Apenas erros"
echo "‚Ä¢ uptime                      - Tempo de atividade"
echo "‚Ä¢ w                           - Usu√°rios logados"
echo "‚Ä¢ free -h                     - Uso de mem√≥ria"
echo "‚Ä¢ df -h                       - Uso de disco"
echo ""

echo "‚úÖ Exerc√≠cio de processos e servi√ßos conclu√≠do!"
echo "=================================="
